{"version":3,"sources":["Configs/ConfigEmergency.js","helpers/history.js","Components/Login/Login.js","Actions/user.Action.js","Reducers/Map.Reducer.js","Components/Maps/Emergency/Location.js","Components/Maps/Emergency/Map.js","Components/Maps/index.js","Components/Tables/Detailview/Detail.cell.js","Components/Tables/Emergency.js","Actions/map.Action.js","Configs/ConfigReport.js","Components/Tables/Detailview/Detail.report.js","Components/Tables/Report.js","Components/Tables/index.js","Components/index.js","Actions/list.Action.js","helpers/privateRoute.js","App.js","serviceWorker.js","Reducers/user.Reducer.js","Reducers/list.Reducer.js","Reducers/index.js","index.js"],"names":["Production","ws","Socket","history","createBrowserHistory","Login","onChange","e","setState","target","name","value","onLogin","state","username","password","console","log","props","dispatch","objectLogin","Axios","post","then","response","data","success","localStorage","setItem","token","type","payload","push","Action","className","xs","sm","md","lg","xl","style","textAlign","backgroundColor","Item","rules","required","message","placeholder","passwordEmpty","onClick","href","Component","connect","initialUserState","user_location","staff_location","LocationMap","this","location","user","window","google","maps","LatLng","latitude","longitude","defaultCenter","defaultZoom","defaultMapTypeId","center","zoom","position","title","icon","url","anchor","Point","scaledSize","Size","WrappedMap","withScriptjs","withGoogleMap","Map_User","Map","Location","googleMapURL","loadingElement","height","width","containerElement","mapElement","React","Text","Typography","Cell","status","Service_","flex","code","_id","Profile","Contact","Lisence_plate","Detail_car","get","id","User_","User_car","detail_Car","catch","err","undefined","size","src","profile_image","first_name","last_name","gender","email","phone_number","plate_number","plate_province","car_brand","car_model","battery_type","battery_size","connect_type","IO","Emergency","ModelOpen","visible","userId","ModelOk","ModalCancel","Chkstatus","class","PossionMap","ActionMap","row","on","result","JSON","parse","onOk","onCancel","map","items","_i","key","widgth","Report","LayoutMap","useSelector","Lists","listdata","Index","theme","mode","defaultSelectedKeys","removeItem","PrivateRoute","component","rest","render","getItem","to","pathname","from","App","exact","path","Boolean","hostname","match","authentication","userState","loggedIn","ListState","combine","combineReducers","LoginReducer","action","Store","createStore","applyMiddleware","thunk","logger","ReactDOM","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.2da32eca.chunk.js","sourcesContent":["import Socket from 'socket.io-client'\r\nexport const Production =  \"https://emergencycell-demo.herokuapp.com/\"\r\nexport const localhost = \"http://localhost:8080/\"\r\n\r\nexport const ws = Socket(Production)\r\n//export const ws = Socket(localhost)","import { createBrowserHistory } from 'history';\r\n\r\nexport const  history = createBrowserHistory();\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as Action from '../../Actions/user.Action'\r\nimport './css/Login.css'\r\nimport 'antd/dist/antd.css';\r\nimport { Form, Input, Button , Row , Col  } from 'antd';\r\nimport { useForm } from 'antd/lib/form/util';\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = { username:\"\" , password:\"\" } \r\n    } \r\n    onChange = e => {\r\n        this.setState( {[e.target.name]:e.target.value})\r\n    }\r\n    onLogin = () =>{\r\n        let {username , password} = this.state \r\n        console.log(\"username:\"+username+\":\"+\"password\"+password)\r\n      //  if(username !=\"\" && password !=\"\")\r\n        this.props.dispatch(Action.Login_Action( username , password )) \r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\" container-fluid bg-login\">\r\n                <div className=\" container-sm container-md container-lg container-xl\" >\r\n                 <Row className=\"login-containar\">\r\n                 <Col xs={5} sm={8} md={9} lg={11} xl={13} style={{textAlign:\"center\" ,backgroundColor:\"#5DADE2\" }}> register </Col>\r\n                 <Col xs={21} sm={17} md={13} lg={9} xl={11}  >\r\n                 <div className=\"text-title-form\">\r\n                    Log In <p>Station Oparater  </p>\r\n                </div>\r\n                 <Form className=\"login-form\"  >\r\n  \r\n                    <Form.Item className=\"login-form-input\"  name=\"username\" rules={[ {required: true, message: 'Please input your Username!', } ]} >\r\n                        <Input type=\"text\" placeholder=\"Username\" name=\"username\" onChange={e=>this.onChange(e)} />\r\n                    </Form.Item>\r\n                    <Form.Item  className=\"login-form-input\" name=\"password\" rules={[ passwordEmpty ,]} >\r\n                        <Input type=\"password\" placeholder=\"Password\" name=\"password\" onChange={e=>this.onChange(e)}/>\r\n                    </Form.Item>\r\n\r\n                  \r\n                        <Button type=\"primary\"  className=\"login-form-button\" onClick={() => this.onLogin()}>\r\n                        Log in\r\n                        </Button>\r\n                         <a href=\"#Forget your password\" className=\"login-forget\" >forget your password</a>\r\n                  \r\n                    </Form>\r\n                    </Col>\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n    );\r\n    }\r\n}\r\nconst usernameEmpty = { required: true, message: 'Please input your Username!', }\r\nconst passwordEmpty = { required: true, message: 'Please input your Password!', }\r\nexport default connect()(Login);","import { Production } from '../Configs/ConfigEmergency'\r\nimport { history } from '../helpers/history'\r\nimport Axios from 'axios'\r\n\r\nconst LoginAction = (payload) =>({\r\n    type:\"LOGIN_AUTH_ACTION\" , \r\n    payload\r\n}) \r\nconst LogoutAction = () =>({\r\n    type:\"LOGOUT_ACTION\" ,\r\n   \r\n})\r\n//const headers ={ \"headers\":{ \"Content-Type\" : \"application/json\"} }\r\nexport const Login_Action  = (username,password) => {\r\n    return dispatch => {\r\n          let objectLogin = {\"username\":username , \"password\":password}\r\n\r\n    Axios.post( Production+\"api/station/manager/v1/staff/login\" , objectLogin , { \"headers\" : {\"Content-Type\" : \"application/json\"} })\r\n        .then(\r\n            response => {\r\n                \r\n                let data = response.data \r\n               if( data.success != false ) {\r\n                localStorage.setItem(\"token\" , data.token) \r\n                localStorage.setItem(\"authentication\" , data.success)     \r\n                dispatch(LoginAction(data))   \r\n                history.push('/manager'); \r\n                }\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport const Logout_Action = () => {\r\n    return dispatch => {\r\n        localStorage.removeItem(\"token\") \r\n        localStorage.removeItem(\"authentication\" )    \r\n        dispatch(LogoutAction())\r\n        history.push('/');\r\n    }\r\n}\r\n\r\n","const initialUserState = {\r\n    user_location :[],\r\n    staff_location : []\r\n}\r\n\r\nconst initialReportState = {\r\n    location:[] \r\n}\r\n\r\nexport const Map_User = (state = initialUserState , action) => {\r\n    switch (action.type) {\r\n        case    'EMERGENCY_MAP_ACTION':\r\n                return { user_location: action.payload  }\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import React, { Component  } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { GoogleMap ,withScriptjs, withGoogleMap, Marker  } from 'react-google-maps' ;\r\nimport { Map_User } from '../../../Reducers/Map.Reducer';\r\n\r\n\r\n class LocationMap extends Component {\r\n    \r\n    constructor(props){\r\n        super(props)\r\n\r\n          \r\n    }\r\n    componentDidCatch(){\r\n      // console.log(\">>Catch\"+this.props.location.user_location)\r\n    }\r\n    componentDidUpdate(){\r\n      //  console.log(\"Update\"+this.props.location.user_location.latitude)\r\n    }\r\n \r\n \r\n    render() {\r\n            const { user_location } = this.props.location \r\n            const user = new window.google.maps.LatLng(user_location.latitude,user_location.longitude)\r\n                    return (\r\n                    \r\n                                <GoogleMap \r\n                    \r\n                                        defaultCenter = {  new window.google.maps.LatLng(14.979900,100.501762)}\r\n\r\n                                        defaultZoom={10}\r\n                                        \r\n                                        defaultMapTypeId= 'roadmap'\r\n\r\n                                        center= {  user }\r\n\r\n                                        zoom={10}\r\n                                        \r\n                                    > \r\n                                    \r\n                                        \r\n                                        <Marker   \r\n\r\n                                            position = { user }         \r\n                                        //  onClick={()=> this.setState({isOpen:true})}\r\n                                            title= \"Emergency\"  \r\n                                            icon = {  { \r\n                                                        url: 'https://image.flaticon.com/icons/svg/584/584517.svg' ,\r\n                                                        anchor: new window.google.maps.Point(40, 40),\r\n                                                        scaledSize: new window.google.maps.Size(40, 40)    \r\n                                                    } } \r\n                                        \r\n                                            \r\n                                        />\r\n                                \r\n                            </GoogleMap> \r\n                                            \r\n                    )\r\n        }\r\n    }\r\n\r\n\r\nconst WrappedMap = withScriptjs(withGoogleMap(LocationMap));\r\n\r\n\r\n  const mapStateToProps = (state) => {\r\n      return {\r\n          location: state.Map_User\r\n      }\r\n  }\r\n export default connect(mapStateToProps) (WrappedMap);","\r\nimport * as React  from 'react';\r\n\r\nimport LocationMap from './Location'\r\n\r\n\r\n\r\n class Map extends React.Component {\r\n\r\nrender(){\r\n        return (\r\n\r\n           \r\n\r\n                <LocationMap \r\n                \r\n\r\n                googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyCPOmq_l7JF2EAW2vjev8bMIa6TI319Y6A`}\r\n                \r\n                loadingElement={<div style={{height:\"100vh\" ,width:\"100%\"}} />}\r\n                \r\n                containerElement={<div style={{height:\"100vh\" ,width:\"100%\"}}/>}\r\n                \r\n                mapElement={<div style={{height:\"100vh\" , width:\"100%\"}}/>}\r\n                \r\n                />\r\n                \r\n          \r\n        )\r\n    }\r\n}\r\nexport default Map","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport Emergency from './Emergency/Map'\r\n\r\nfunction Map_ () {\r\n\r\n        return <Emergency />\r\n\r\n}\r\n\r\nexport default connect()(Map_);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Axios from 'axios'\r\nimport { Row, Col, Typography, Input ,Form, Button ,Spin ,Cascader} from 'antd';\r\nimport './css/Detail.cell.css'\r\nimport 'antd/dist/antd.css';\r\nimport { Production } from '../../../Configs/ConfigEmergency'\r\n const {Text} = Typography\r\n class Cell extends Component {\r\n     constructor(props) {\r\n         super(props)\r\n         this.state = {\r\n              _id: \"\",  Profile : [] , Contact : [] , Lisence_plate: [] , Detail_car: [] , Service_ : []\r\n         }\r\n     }\r\n     componentDidMount() {\r\n         Axios.get(Production+\"api/emergency/v1/station/staff/detailCell?id=\"+this.props.id).then(\r\n             response => {\r\n                let data = response.data\r\n                this.setState({\r\n                    Profile: data.User_.Profile ,\r\n                    Contact:data.User_.Contact,\r\n                    Lisence_plate: data.User_car.Lisence_plate ,\r\n                    Detail_car: data.User_car.detail_Car ,\r\n                    Service_ :  data.status ,\r\n                    _id : data._id\r\n\r\n                })\r\n                \r\n             }\r\n         ).catch(err=>console.log(err))\r\n     }\r\n     status = () => {\r\n            if(this.state.Service_ == \"SOS\") {\r\n                return Sos()\r\n            }\r\n            return Status(this.state.Service_)\r\n     }\r\n    render() {\r\n        const { Profile ,Contact , Lisence_plate , Detail_car , Service_ , _id } = this.state\r\n     \r\n            if( _id == \"\" || _id == null || _id == undefined ) {\r\n                return(\r\n                <div style={{textAlign:\"center\"}}>\r\n                     <Spin  size=\"large\"  />\r\n                      </div>\r\n                )\r\n            }  \r\n\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col flex={0.5}><img src={Profile.profile_image}  width=\"170px\"  height=\"200px\"/></Col>\r\n                    <Col flex={4} className=\"col-detail\">\r\n                  \r\n                  <p className=\"col-margin-detail\"> {Profile.first_name+\" \"+Profile.last_name}</p>\r\n                  <p className=\"col-margin-detail\">  Male{Profile.gender}</p>\r\n                  <p className=\"col-margin-detail\">  {Contact.email}</p>\r\n                  <p className=\"col-margin-detail\">  {Contact.phone_number}</p>\r\n                  <p className=\"col-margin-detail\">  {Lisence_plate.plate_number+\" \"+Lisence_plate.plate_province}</p>\r\n              </Col>\r\n                </Row>\r\n                <Row>\r\n\r\n                    <Col flex={'auto'} className=\"col-car\">\r\n                        <Row> \r\n                            <Col flex={'auto'} className=\"col-margin-topic\"><p>ยี่ห้อรถยนต์</p></Col> <Col flex={'auto'} className=\"col-margin-car\"><p>{Detail_car.car_brand}</p></Col>\r\n                            <Col flex={'auto'}  className=\"col-margin-topic\"><p>รุ่นรถยนต์</p></Col><Col flex={'auto'}  className=\"col-margin-car\"><p>{Detail_car.car_model}</p></Col>\r\n                        </Row>\r\n                        <Row>\r\n                             <Col flex={'auto'}  className=\"col-margin-topic\"><p> แบตรี่รถยนต์</p></Col><Col flex={'auto'}  className=\"col-margin-car\"><p>{Detail_car.battery_type}</p></Col>\r\n                             <Col flex={'auto'}  className=\"col-margin-topic\"><p> ขนาดแบตรี่</p></Col><Col  flex={'auto'}  className=\"col-margin-car\"><p>{Detail_car.battery_size}</p></Col>\r\n                        </Row>\r\n                        <Row> \r\n                            <Col flex={'auto'}  className=\"col-margin-topic\"><p> หัวชาต</p></Col>\r\n                            <Col  flex={'auto'} className=\"col-margin-car\"><p>1. {Detail_car.connect_type}</p></Col>\r\n                            <Col flex={'auto'}  className=\"col-margin-car\"><p>2. {Detail_car.connect_type}</p></Col>\r\n                        </Row>\r\n                    </Col>\r\n\r\n                </Row>\r\n                <Row>\r\n                    {\r\n                        this.status()\r\n                    }\r\n\r\n                </Row>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\nfunction Sos () {\r\n    return  (     \r\n    <>      \r\n        <Col flex={'auto'} >\r\n            <Form className=\"col-margin-topic\">\r\n                <Form.Item > \r\n                    <Cascader type=\"text\" placeholder=\"select\"/>\r\n                </Form.Item>\r\n            </Form>\r\n        </Col>\r\n        <Col flex={'auto'} >\r\n            <Button>add</Button>\r\n        </Col>\r\n    </>    \r\n    )      \r\n      \r\n}\r\nfunction Status (status) {\r\n    return (\r\n    <>\r\n        <Col flex={'auto'}>\r\n            <Row>\r\n                <Col className=\"col-margin-topic\" >status</Col>\r\n                <Col> <Text code> {status}</Text> </Col>\r\n            </Row>\r\n        </Col>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default connect()(Cell)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as ActionMap from '../../Actions/map.Action'\r\nimport { ws } from '../../Configs/ConfigEmergency'\r\nimport './css/Emergency.css'\r\nimport \"antd/dist/antd.css\";\r\nimport { Modal ,Button} from \"antd\";\r\nimport DetailCell from './Detailview/Detail.cell';\r\nconst IO = ws\r\nclass Emergency extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            row: [] , \r\n            visible: false , \r\n            userId : \"\"\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        IO.on('emergency-cell-lists' , response => {\r\n            let result = JSON.parse(response)\r\n            this.setState( { row : result} )\r\n        })\r\n    }\r\n    ModelOpen = id => {\r\n         \r\n        this.setState({\r\n            visible : true ,\r\n            userId: id\r\n        })\r\n    }\r\n    ModelOk = () => {\r\n        this.setState({ visible : false})\r\n    }\r\n    ModalCancel = () => {\r\n        this.setState({ visible : false })\r\n    }\r\n    Chkstatus = status => {\r\n        if(status == \"INPROGRESS\") {\r\n            return getInProgress()\r\n        }\r\n        return getSos()\r\n    }\r\n    PossionMap = location => {\r\n        //console.log(location)\r\n        this.props.dispatch(ActionMap.EmergencyAction(location))\r\n    }\r\n    render(){\r\n       \r\n        return (\r\n            <div>\r\n                <Modal title=\"Model\"  width={'1000px'} visible={this.state.visible} onOk={this.ModelOk} onCancel={this.ModalCancel}>\r\n                    <DetailCell id={this.state.userId} />\r\n                </Modal>\r\n                <div className=\"container-fix\">\r\n                <p>Emergency-cell</p>\r\n                    <table className=\"table table-responsive  \">\r\n                    <thead  >\r\n                    <th style={{width:\"10%\" ,textAlign:\"center\"}}></th>\r\n                    <th style={{width:\"10%\" ,textAlign:\"center\"}}></th>\r\n                    <th style={{width:\"30%\",textAlign:\"center\"}}>username</th>\r\n                    <th style={{width:\"20%\",textAlign:\"center\"}}>phone</th>\r\n                    <th style={{width:\"10%\",textAlign:\"center\"}}>status</th>\r\n                    </thead>\r\n                        <tbody >\r\n                        {  this.state.row.map((items,_i) => \r\n                            <tr key={_i}>\r\n                                           <td>\r\n                                               <a   onClick={()=>this.ModelOpen(items._id)}>\r\n                                               <img src=\"https://image.flaticon.com/icons/svg/2674/2674880.svg\" height=\"25px\"  widgth=\"30px\"/>\r\n                                                </a>\r\n                                            </td>\r\n                                            <td>\r\n                                               <a size={'default'}     onClick={()=>this.PossionMap(items.Location)}>\r\n                                                    <img src=\"https://image.flaticon.com/icons/svg/854/854878.svg\" height=\"30px\" width=\"30px\"/>\r\n                                               </a>\r\n                                            </td>\r\n                                            <td>{items.User_.Profile.first_name+\" \"+items.User_.Profile.last_name}</td>\r\n                                            <td>{items.User_.Contact.phone_number}</td>\r\n                                            \r\n                                            <td> \r\n                                                {this.Chkstatus(items.status)}\r\n                                             </td>\r\n                            </tr>\r\n                         )}\r\n                        </tbody>\r\n                    </table>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst  wd = { width:\"100%\"}\r\n\r\nexport default connect()(Emergency)\r\n\r\nfunction getSos() {\r\n    return ( <span class=\"badge badge-danger font-status\">SOS</span> )\r\n}\r\nfunction getInProgress () {\r\n    return ( <span class=\"badge badge-warning font-status\">IN PROGRESS</span> )\r\n}\r\n","const EmergecyMap = payload => ({\r\n    type:\"EMERGENCY_MAP_ACTION\", \r\n    payload\r\n})\r\n\r\n\r\nexport const EmergencyAction = (location) => {\r\n    return dispatch => {\r\n        dispatch(EmergecyMap(location))\r\n    }\r\n}\r\n","import Socket from 'socket.io-client'\r\n\r\nexport const Production =  \"https://stolen-report-demo.herokuapp.com/\"\r\nexport const localhost = \"http://localhost:8080/\"\r\n\r\nexport const ws = Socket(Production)\r\n//export const ws = Socket(localhost)","\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Axios from 'axios'\r\nimport { Row, Col, Typography, Input ,Form, Button ,Spin} from 'antd';\r\nimport './css/Detail.report.css'\r\nimport 'antd/dist/antd.css';\r\nimport { Production } from '../../../Configs/ConfigReport'\r\n    const {Text} = Typography\r\n class Report extends Component {\r\n     constructor(props) {\r\n         super(props)\r\n         this.state = {\r\n           _id:\"\" , Profile : [] , Contact : [] , Lisence_plate: [] , Detail_car: [] , Service_ : []\r\n         }\r\n     }\r\n     componentDidMount() {\r\n         Axios.get(Production+\"api/stolen/v1/report/getReport?id=\"+this.props.id).then(\r\n             response => {\r\n                let data = response.data\r\n                this.setState({\r\n                    Profile: data.User_.Profile ,\r\n                    Contact:data.User_.Contact,\r\n                    Lisence_plate: data.User_car.Lisence_plate ,\r\n                    Detail_car: data.User_car.detail_Car ,\r\n                    Service_ :  data, \r\n                    _id : data._id\r\n\r\n                })\r\n                \r\n             }\r\n         ).catch(err=>console.log(err))\r\n     }\r\n\r\n    render() {\r\n        const { Profile ,Contact , Lisence_plate , Detail_car , Service_ , _id} = this.state\r\n        if( _id == \"\" || _id == null || _id == undefined ) {\r\n            return(\r\n            <div style={{textAlign:\"center\"}}>\r\n                 <Spin  size=\"large\"  />\r\n                  </div>\r\n            )\r\n        }  \r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col flex={0.5}><img src={Profile.profile_image}  width=\"170px\"  height=\"200px\"/></Col>\r\n                    <Col flex={4} className=\"col-detail\">\r\n                  \r\n                  <p className=\"col-margin-detail\"> {Profile.first_name+\" \"+Profile.last_name}</p>\r\n                  <p className=\"col-margin-detail\">  Male{Profile.gender}</p>\r\n                  <p className=\"col-margin-detail\">  {Contact.email}</p>\r\n                  <p className=\"col-margin-detail\">  {Contact.phone_number}</p>\r\n                  <p className=\"col-margin-detail\">  {Lisence_plate.plate_number+\" \"+Lisence_plate.plate_province}</p>\r\n              </Col>\r\n                </Row>\r\n                <Row>\r\n\r\n                    <Col flex={'auto'} className=\"col-car\">\r\n                        <Row> \r\n                            <Col flex={'auto'} className=\"col-margin-topic\"><p>ยี่ห้อรถยนต์</p></Col> <Col flex={'auto'} className=\"col-margin-car\"><p>{Detail_car.car_brand}</p></Col>\r\n                            <Col flex={'auto'}  className=\"col-margin-topic\"><p>รุ่นรถยนต์</p></Col><Col flex={'auto'}  className=\"col-margin-car\"><p>{Detail_car.car_model}</p></Col>\r\n                        </Row>\r\n                        <Row>\r\n                             <Col flex={'auto'}  className=\"col-margin-topic\"><p> แบตรี่รถยนต์</p></Col><Col flex={'auto'}  className=\"col-margin-car\"><p>{Detail_car.battery_type}</p></Col>\r\n                             <Col flex={'auto'}  className=\"col-margin-topic\"><p> ขนาดแบตรี่</p></Col><Col  flex={'auto'}  className=\"col-margin-car\"><p>{Detail_car.battery_size}</p></Col>\r\n                        </Row>\r\n                        <Row> \r\n                            <Col flex={'auto'}  className=\"col-margin-topic\"><p> หัวชาต</p></Col>\r\n                            <Col  flex={'auto'} className=\"col-margin-car\"><p>1. {Detail_car.connect_type}</p></Col>\r\n                            <Col flex={'auto'}  className=\"col-margin-car\"><p>2. {Detail_car.connect_type}</p></Col>\r\n                        </Row>\r\n                    </Col>\r\n\r\n                </Row>\r\n                <Row>\r\n                <Col flex={'auto'}>\r\n                    <Row>\r\n                        <Col className=\"status\" >status </Col>\r\n                        <Col > <Text className=\"Text\" code> {Service_.status}</Text> </Col>\r\n                    </Row>\r\n                </Col>\r\n\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect()(Report)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Modal } from \"antd\";\r\nimport {ws} from '../../Configs/ConfigReport'\r\nimport DetailReport from './Detailview/Detail.report'\r\nimport './css/Report.css'\r\nconst IO = ws\r\nclass Report extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            row: [] ,visible:false , userId:\"\"\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        IO.on('stolen-report-lists' , response => {\r\n            let result = JSON.parse(response)\r\n            console.log(result)\r\n            this.setState( { row : result} )\r\n        })\r\n    }\r\n    ModelOpen = id => {\r\n         \r\n        this.setState({\r\n            visible : true ,\r\n            userId: id\r\n        })\r\n    }\r\n    ModelOk = () => {\r\n        this.setState({ visible : false})\r\n    }\r\n    ModalCancel = () => {\r\n        this.setState({ visible : false })\r\n    }\r\n    Chkstatus = status => {\r\n        if(status == \"Lock\"){\r\n            return getLock()\r\n        }\r\n            return getReport()\r\n    }\r\n\r\n    render(){\r\n       \r\n        return (\r\n            <div className=\"\">\r\n               <Modal title=\"Model\" visible={this.state.visible} onOk={this.ModelOk} onCancel={this.ModalCancel}>\r\n                    <DetailReport id={this.state.userId} />\r\n                </Modal>\r\n                <div className=\" container-fuild \">\r\n                <p>Report</p>\r\n                <div className=\" container table-responsive \">\r\n                    <table className=\"table table-bordered\">\r\n                    <thead style={{width:\"100%\"}} >\r\n                    <th style={{ textAlign:\"center\"}}></th>\r\n                    <th style={{ textAlign:\"center\"}}> Lisence plate</th>   \r\n                    <th style={{ textAlign:\"center\"}}> Car Brand </th>\r\n                    <th style={{ textAlign:\"center\"}}> Car Model </th>\r\n                    <th style={{ textAlign:\"center\"}}> Connector </th>\r\n                    <th style={{ textAlign:\"center\"}}> Connector </th>\r\n                    <th style={{ textAlign:\"center\"}}> Username </th>\r\n                    <th style={{ textAlign:\"center\"}}> Phone number </th>\r\n                    <th style={{ textAlign:\"center\"}}> E - Mail </th>\r\n                    <th style={{ textAlign:\"center\"}}> status </th>\r\n                    </thead>\r\n                        <tbody >\r\n                        {  this.state.row.map((items,_i) => \r\n                            <tr key={_i}>\r\n                                           <td>\r\n                                            <a   onClick={()=>this.ModelOpen(items._id)}>\r\n                                                <img src=\"https://image.flaticon.com/icons/svg/2674/2674880.svg\" height=\"25px\"  widgth=\"30px\"/>\r\n                                            </a>\r\n                                           </td>\r\n                                           <td>\r\n                                               {items.User_car.Lisence_plate.plate_number+\" \"+items.User_car.Lisence_plate.plate_province}\r\n                                           </td>\r\n                                           <td> \r\n                                                {items.User_car.detail_Car.car_brand}\r\n                                           </td>\r\n                                           <td>\r\n                                                {items.User_car.detail_Car.car_model}\r\n                                           </td>\r\n                                           <td>\r\n                                               {items.User_car.detail_Car.connect_type[0]}\r\n                                           </td>\r\n                                           <td>\r\n                                               {items.User_car.detail_Car.connect_type[1]}\r\n                                           </td>\r\n                                            <td>\r\n                                                {items.User_.Profile.first_name+\" \"+items.User_.Profile.last_name}\r\n                                            </td>\r\n                                            <td>\r\n                                                {items.User_.Contact.phone_number}\r\n                                            </td>\r\n                                            <td>\r\n                                                {items.User_.Contact.email}\r\n                                            </td>\r\n                                            <td> \r\n                                                {this.Chkstatus(items.status)}\r\n                                            </td>\r\n                            </tr>\r\n                         )}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst  wd = { width:\"100%\"}\r\n\r\nexport default connect()(Report)\r\nfunction getReport () {\r\n    return (  <span class=\"badge badge-danger font-status\">Report</span>  )\r\n}\r\nfunction getLock () {\r\n    return (  <span class=\"badge badge-warning font-status\">Lock</span> )\r\n}","import React from 'react';\r\nimport {Col, Row} from 'antd'\r\n import {useSelector, connect } from 'react-redux'\r\n import Emergency from './Emergency'\r\n import Report from './Report'\r\n import Map_ from '../Maps/index'\r\nfunction Table_ () {\r\n    const select_ = useSelector(state => state.Lists)\r\n    const list = select_.listdata \r\n     if(list == 'stolen-report') {\r\n         return <Report />\r\n     }\r\n        return <LayoutMap />\r\n\r\n}\r\nfunction LayoutMap () {\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <Row>\r\n                <Col flex=\"auto\">\r\n                    <Map_ />\r\n                </Col>\r\n                <Col flex=\"500px\">\r\n                    <Emergency />\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\nexport default connect()(Table_);\r\n\r\n","import React, { Component } from 'react';\r\nimport { Row, Col, Button , Menu  } from 'antd';\r\nimport  * as Select from '../Actions/list.Action'\r\nimport * as Logout from '../Actions/user.Action'\r\nimport './css/index.css'\r\nimport Map from './Maps/index'\r\nimport Table_ from './Tables/index'\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    AppstoreOutlined,\r\n    BarChartOutlined,\r\n    CloudOutlined,\r\n    ShopOutlined,\r\n    TeamOutlined,\r\n    UserOutlined,\r\n    UploadOutlined,\r\n    VideoCameraOutlined,\r\n  } from '@ant-design/icons';\r\n\r\nclass Index extends Component {\r\n\r\n    render() { \r\n            const {dispatch} = this.props\r\n\r\n        return (\r\n            <div >\r\n                <Row>\r\n                    <Col  flex={'50px'} className=\"content-tab-menu\">\r\n             \r\n                    <Menu className=\"tab-menu\" theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['4']}>\r\n                     \r\n                        <Menu.Item key=\"1\" className=\"tab-topic\" onClick={()=>dispatch(Select.emergency())} >\r\n                       \r\n                        <span className=\"nav-text\"  >Emergency</span>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"2\" className=\"tab-topic\"  onClick={()=>dispatch(Select.report())}>\r\n                    \r\n                        <span className=\"nav-text\" >Report</span>\r\n                        </Menu.Item>\r\n              \r\n                   \r\n                        <Menu.Item key=\"3\" className=\"tab-topic\" onClick={()=>dispatch(Logout.Logout_Action())} >\r\n                        <span className=\"nav-text\" >Logout</span>\r\n                        </Menu.Item>\r\n                   \r\n                    </Menu>\r\n                         \r\n                    </Col>\r\n                    <Col flex={'auto'} >\r\n                    \r\n                                <Table_ />\r\n                      \r\n                    </Col>\r\n\r\n                </Row>\r\n                <Row>\r\n                    \r\n                </Row>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default connect()(Index);","\r\n\r\nconst emergency_Action = () => ({\r\n    type:\"LIST_EMERGENCY_ACTION\",\r\n  \r\n})\r\n\r\nconst report_Action = () => ({\r\n    type:\"LIST_REPORT_ACTION\" ,\r\n\r\n})\r\n\r\nexport const emergency = () => {\r\n    return dispatch => {\r\n            dispatch(emergency_Action())\r\n    }\r\n}\r\n\r\nexport const report = () => {\r\n    return dispatch => {\r\n        dispatch(report_Action())\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\r\n   <Route {...rest} render={props => (\r\n       localStorage.getItem('authentication') \r\n       ? <Component {...props} /> \r\n       : <Redirect to={{ pathname: '/', state: { from: props.location } }} />\r\n   )} />\r\n)","import React from 'react';\nimport { Router, Switch, Route} from 'react-router-dom';\nimport Login from './Components/Login/Login'\nimport Index from './Components';\nimport { history } from './helpers/history'\nimport { PrivateRoute} from './helpers/privateRoute'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router history={history}>\n      <Switch>\n            <PrivateRoute exact path='/manager' component={Index}/>\n            <Route  exact path=\"/\" component={Login}/>\n         </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let token = localStorage.getItem(\"token\")\r\nlet authentication = localStorage.getItem(\"authentication\")\r\n//if(token != undefined || token != null || token != \"\")\r\nconst userState = authentication ? {loggedIn:true , authentication , token } : {};\r\n\r\nexport const LoginReducer = ( state=userState , action) => \r\n    {\r\n        switch(action.type) {\r\n            case \"LOGIN_AUTH_ACTION\":\r\n                    return {\r\n                        loggedIn :true , \r\n                        authentication: action.payload.success,\r\n                        token: action.payload.token\r\n                    }\r\n            case \"LOGOUT_ACTION\" : \r\n                    return {\r\n                        loggedIn: false , \r\n                        authentication: false ,\r\n                        token: \"\"\r\n                    }\r\n            default : \r\n            return state\r\n\r\n        }\r\n    }","const ListState = {\r\n    listdata:\"\"\r\n}\r\nexport const Lists = (state = ListState , action) => {\r\n    switch (action.type) {\r\n        case \"LIST_EMERGENCY_ACTION\" :\r\n            return { listdata:\"emergency-cell\" }\r\n        case \"LIST_REPORT_ACTION\" :\r\n            return { listdata:\"stolen-report\" }\r\n        default :\r\n            return state\r\n    }\r\n}","import { createStore, applyMiddleware , combineReducers} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger'\r\nimport { LoginReducer } from './user.Reducer'\r\nimport { Lists } from './list.Reducer'\r\nimport {Map_Report ,Map_User} from './Map.Reducer'\r\nconst combine = combineReducers({\r\n        LoginReducer , Lists  ,Map_User\r\n})\r\n\r\n const  Store = createStore( combine , applyMiddleware( thunk , logger ) )\r\nexport default Store\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './Reducers/index'\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}